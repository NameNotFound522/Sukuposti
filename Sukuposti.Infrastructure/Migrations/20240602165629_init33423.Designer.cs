// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sukuposti.Infrastructure.Context;

#nullable disable

namespace Sukuposti.Infrastructure.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20240602165629_init33423")]
    partial class init33423
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique();

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique();

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUserToken", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Audit", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<byte[]>("Changes")
                        .HasColumnType("blob")
                        .HasColumnName("changes");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("operation_time");

                    b.Property<string>("TargetClass")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("target_class");

                    b.Property<uint?>("TargetId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("target_id");

                    b.Property<uint?>("UserId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TargetClass", "TargetId" }, "target_class");

                    b.ToTable("audit", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.EfmigrationsHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__EFMigrationsHistory", (string)null);
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Emalinja", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Nimi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nimi");

                    b.Property<uint?>("RotuId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("rotu_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RotuId" }, "rotu_id");

                    b.ToTable("emalinja", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Gallup", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<bool>("Julkinen")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("julkinen");

                    b.Property<string>("Otsikko")
                        .HasColumnType("text")
                        .HasColumnName("otsikko");

                    b.Property<DateOnly?>("Voimassaolo")
                        .HasColumnType("date")
                        .HasColumnName("voimassaolo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("gallup", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.GallupVaihtoehto", b =>
                {
                    b.Property<uint>("GallupId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("gallup_id");

                    b.Property<uint>("VaihtoehtoId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("vaihtoehto_id");

                    b.Property<string>("Selitys")
                        .HasColumnType("text")
                        .HasColumnName("selitys");

                    b.Property<uint?>("Valittu")
                        .HasColumnType("int unsigned")
                        .HasColumnName("valittu");

                    b.HasKey("GallupId", "VaihtoehtoId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("gallup_vaihtoehto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Geeni", b =>
                {
                    b.Property<ushort>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ushort>("Id"));

                    b.Property<string>("Lyhenne")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("lyhenne");

                    b.Property<string>("Selitys")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("selitys");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("geeni", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Hevonen", b =>
                {
                    b.Property<uint>("Spnro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Spnro"));

                    b.Property<bool>("EiKilpaillut")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ei_kilpaillut");

                    b.Property<bool>("EiKtkKelp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ei_ktk_kelp");

                    b.Property<uint?>("EmalinjaId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("emalinja_id");

                    b.Property<bool>("Julkinen")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("julkinen");

                    b.Property<string>("Kasvattaja")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("kasvattaja");

                    b.Property<string>("Kommentti")
                        .HasColumnType("text")
                        .HasColumnName("kommentti");

                    b.Property<DateOnly?>("Kuolinaika")
                        .HasColumnType("date")
                        .HasColumnName("kuolinaika");

                    b.Property<bool>("KuolinaikaArvio")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kuolinaika_arvio");

                    b.Property<string>("Kuolinsyy")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("kuolinsyy");

                    b.Property<bool?>("Kuollut")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kuollut");

                    b.Property<uint?>("Lisaaja")
                        .HasColumnType("int unsigned")
                        .HasColumnName("lisaaja");

                    b.Property<DateTime?>("Lisatty")
                        .HasColumnType("datetime")
                        .HasColumnName("lisatty");

                    b.Property<string>("Merkit")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("merkit");

                    b.Property<DateTime?>("Muokattu")
                        .HasColumnType("datetime")
                        .HasColumnName("muokattu");

                    b.Property<uint?>("Muokkaaja")
                        .HasColumnType("int unsigned")
                        .HasColumnName("muokkaaja");

                    b.Property<string>("Muuta")
                        .HasColumnType("text")
                        .HasColumnName("muuta");

                    b.Property<uint?>("Nimi")
                        .HasColumnType("int unsigned")
                        .HasColumnName("nimi");

                    b.Property<string>("Omistaja")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("omistaja");

                    b.Property<uint?>("Reknro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("reknro");

                    b.Property<uint?>("Rotu")
                        .HasColumnType("int unsigned")
                        .HasColumnName("rotu");

                    b.Property<uint?>("RotuArvio")
                        .HasColumnType("int unsigned")
                        .HasColumnName("rotu_arvio");

                    b.Property<decimal?>("Saka")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("saka");

                    b.Property<bool?>("SakaArvio")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("saka_arvio");

                    b.Property<string>("Sukupuoli")
                        .HasColumnType("enum('ori','tamma','ruuna')")
                        .HasColumnName("sukupuoli");

                    b.Property<DateOnly?>("Syntaika")
                        .HasColumnType("date")
                        .HasColumnName("syntaika");

                    b.Property<bool?>("SyntaikaArvio")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("syntaika_arvio");

                    b.Property<uint?>("Syntmaa")
                        .HasColumnType("int unsigned")
                        .HasColumnName("syntmaa");

                    b.Property<uint?>("Voittosumma")
                        .HasColumnType("int unsigned")
                        .HasColumnName("voittosumma");

                    b.Property<bool>("VoittosummaLopullinen")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("voittosumma_lopullinen");

                    b.Property<DateOnly?>("VoittosummaMennessa")
                        .HasColumnType("date")
                        .HasColumnName("voittosumma_mennessa");

                    b.Property<short?>("VoittosummaValuutta")
                        .HasColumnType("smallint")
                        .HasColumnName("voittosumma_valuutta");

                    b.HasKey("Spnro")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmalinjaId" }, "emalinja_id");

                    b.HasIndex(new[] { "Julkinen" }, "julkinen");

                    b.HasIndex(new[] { "Nimi" }, "nimi");

                    b.HasIndex(new[] { "Reknro" }, "reknro");

                    b.HasIndex(new[] { "Rotu" }, "rotu");

                    b.HasIndex(new[] { "Saka" }, "saka");

                    b.HasIndex(new[] { "Sukupuoli" }, "sukupuoli");

                    b.HasIndex(new[] { "Syntaika" }, "syntaika");

                    b.HasIndex(new[] { "Syntmaa" }, "syntmaa");

                    b.HasIndex(new[] { "Voittosumma" }, "voittosumma");

                    b.HasIndex(new[] { "VoittosummaValuutta" }, "voittosumma_valuutta");

                    b.ToTable("hevonen", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenEnnaty", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<decimal?>("Aika")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("aika");

                    b.Property<bool?>("Autolahto")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("autolahto");

                    b.Property<int?>("Ika")
                        .HasColumnType("int")
                        .HasColumnName("ika");

                    b.Property<string>("Matka")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('tuntematon','ly','ke','kp','pi')")
                        .HasColumnName("matka")
                        .HasDefaultValueSql("'tuntematon'");

                    b.Property<string>("Selitys")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("selitys");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Tyyppi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('normaali','tt','p','m','kl','epavirallinen','muu','voittoaika','opetuslahto')")
                        .HasColumnName("tyyppi")
                        .HasDefaultValueSql("'normaali'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Aika" }, "aika");

                    b.HasIndex(new[] { "Spnro" }, "spnro");

                    b.ToTable("hevonen_ennatys", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenGeeni", b =>
                {
                    b.Property<ulong>("MyRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("my_row_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MyRowId"));

                    b.Property<ushort>("GeeniId")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("geeni_id");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.HasKey("MyRowId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "GeeniId" }, "geeni_id");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro1");

                    b.ToTable("hevonen_geeni", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenKilpailuvoitto", b =>
                {
                    b.Property<ulong>("MyRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("my_row_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MyRowId"));

                    b.Property<decimal?>("Aika")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("aika");

                    b.Property<string>("Ennatys")
                        .HasColumnType("enum('SE','EE','ME')")
                        .HasColumnName("ennatys");

                    b.Property<uint>("Kisa")
                        .HasColumnType("int unsigned")
                        .HasColumnName("kisa");

                    b.Property<string>("Kuski")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("kuski");

                    b.Property<int?>("Matka")
                        .HasColumnType("int")
                        .HasColumnName("matka");

                    b.Property<string>("Paikka")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("paikka");

                    b.Property<int?>("Sija")
                        .HasColumnType("int")
                        .HasColumnName("sija");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<int?>("Voittosumma")
                        .HasColumnType("int")
                        .HasColumnName("voittosumma");

                    b.Property<int?>("Vuosi")
                        .HasColumnType("int")
                        .HasColumnName("vuosi");

                    b.HasKey("MyRowId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Kisa" }, "kisa");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro2");

                    b.ToTable("hevonen_kilpailuvoitto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenKtk", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<decimal?>("Etusaarenleveys")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)")
                        .HasColumnName("etusaarenleveys");

                    b.Property<decimal?>("Etusaarenymparys")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("etusaarenymparys");

                    b.Property<string>("Kuntoluokka")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("kuntoluokka");

                    b.Property<string>("Lausunto")
                        .HasColumnType("text")
                        .HasColumnName("lausunto");

                    b.Property<decimal?>("Lautaskorkeus")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("lautaskorkeus");

                    b.Property<string>("Mitat")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mitat");

                    b.Property<uint?>("Nayttely")
                        .HasColumnType("int unsigned")
                        .HasColumnName("nayttely");

                    b.Property<string>("Paikka")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("paikka");

                    b.Property<uint?>("Palkinto")
                        .HasColumnType("int unsigned")
                        .HasColumnName("palkinto");

                    b.Property<string>("Pisteet")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pisteet");

                    b.Property<DateOnly?>("Pvm")
                        .HasColumnType("date")
                        .HasColumnName("pvm");

                    b.Property<decimal?>("Rungonleveys")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("rungonleveys");

                    b.Property<decimal?>("Rungonpituus")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("rungonpituus");

                    b.Property<decimal?>("Rungonsyvyys")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("rungonsyvyys");

                    b.Property<decimal?>("Rungonymparys")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("rungonymparys");

                    b.Property<decimal?>("Sakakorkeus")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("sakakorkeus");

                    b.Property<string>("Sekalaiset")
                        .HasColumnType("text")
                        .HasColumnName("sekalaiset");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Suunta")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("suunta");

                    b.Property<string>("Tyyppi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('ktk','2tark','3tark','uusinta','esi')")
                        .HasColumnName("tyyppi")
                        .HasDefaultValueSql("'ktk'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Nayttely" }, "nayttely");

                    b.HasIndex(new[] { "Pvm" }, "pvm");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro3");

                    b.ToTable("hevonen_ktk", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenKuva", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<uint>("KuvaId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("kuva_id");

                    b.HasKey("Spnro", "KuvaId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "KuvaId" }, "kuva_id");

                    b.ToTable("hevonen_kuva", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenMetum", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Kommentti")
                        .HasColumnType("text")
                        .HasColumnName("kommentti");

                    b.Property<uint?>("Lisaaja")
                        .HasColumnType("int unsigned")
                        .HasColumnName("lisaaja");

                    b.Property<DateTime?>("Lisatty")
                        .HasColumnType("datetime")
                        .HasColumnName("lisatty");

                    b.Property<DateTime?>("Muokattu")
                        .HasColumnType("datetime")
                        .HasColumnName("muokattu");

                    b.Property<uint?>("Muokkaaja")
                        .HasColumnType("int unsigned")
                        .HasColumnName("muokkaaja");

                    b.HasKey("Spnro")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Lisaaja" }, "lisaaja");

                    b.HasIndex(new[] { "Muokkaaja" }, "muokkaaja");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro4");

                    b.ToTable("hevonen_meta", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenMuuNayttelytulo", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Teksti")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("teksti");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro5");

                    b.ToTable("hevonen_muu_nayttelytulos", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenMuutum", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Teksti")
                        .HasColumnType("text")
                        .HasColumnName("teksti")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Teksti"), "latin1");

                    b.HasKey("Spnro")
                        .HasName("PRIMARY");

                    b.ToTable("hevonen_muuta", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenNayttely", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<decimal?>("Lautaskorkeus")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("lautaskorkeus");

                    b.Property<int?>("Luokankoko")
                        .HasColumnType("int")
                        .HasColumnName("luokankoko");

                    b.Property<string>("Pisteet")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pisteet");

                    b.Property<decimal?>("Sakakorkeus")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("sakakorkeus");

                    b.Property<string>("Sekalaiset")
                        .HasColumnType("text")
                        .HasColumnName("sekalaiset");

                    b.Property<int?>("Sija")
                        .HasColumnType("int")
                        .HasColumnName("sija");

                    b.Property<uint?>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<uint?>("Tapahtuma")
                        .HasColumnType("int unsigned")
                        .HasColumnName("tapahtuma");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("hevonen_nayttely", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenNayttelyPalkinto", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("HevonenNayttely")
                        .HasColumnType("int unsigned")
                        .HasColumnName("hevonen_nayttely");

                    b.Property<uint?>("Palkinto")
                        .HasColumnType("int unsigned")
                        .HasColumnName("palkinto");

                    b.Property<uint?>("TuomariMaa")
                        .HasColumnType("int unsigned")
                        .HasColumnName("tuomari_maa");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("hevonen_nayttely_palkinto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenNimi", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Nimi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nimi");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Tyyppi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('normaali','kilpailunimi','alias','ex-nimi')")
                        .HasColumnName("tyyppi")
                        .HasDefaultValueSql("'normaali'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Nimi" }, "nimi")
                        .HasDatabaseName("nimi1");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro6");

                    b.ToTable("hevonen_nimi", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenOmistaja", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<short?>("Alkupvm")
                        .HasColumnType("smallint")
                        .HasColumnName("alkupvm");

                    b.Property<short?>("Loppupvm")
                        .HasColumnType("smallint")
                        .HasColumnName("loppupvm");

                    b.Property<int>("Maa")
                        .HasColumnType("int")
                        .HasColumnName("maa");

                    b.Property<string>("Omistaja")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("omistaja");

                    b.Property<string>("Paikkakunta")
                        .HasColumnType("tinytext")
                        .HasColumnName("paikkakunta");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Maa" }, "maa");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro7");

                    b.ToTable("hevonen_omistaja", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenPalkinto", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("Palkinto")
                        .HasColumnType("int unsigned")
                        .HasColumnName("palkinto");

                    b.Property<DateTime?>("Pvm")
                        .HasColumnType("datetime")
                        .HasColumnName("pvm");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Palkinto" }, "palkinto");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro8");

                    b.ToTable("hevonen_palkinto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenReknro", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Reknro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reknro");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Reknro" }, "reknro")
                        .HasDatabaseName("reknro1");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro9");

                    b.ToTable("hevonen_reknro", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenRotuKtk", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<uint>("RotuKtkId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("rotu_ktk_id");

                    b.HasKey("Spnro", "RotuKtkId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "RotuKtkId" }, "rotu_ktk_id");

                    b.ToTable("hevonen_rotu_ktk", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenSaavutu", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint?>("Ktk")
                        .HasColumnType("int unsigned")
                        .HasColumnName("ktk");

                    b.Property<uint?>("Nayttely")
                        .HasColumnType("int unsigned")
                        .HasColumnName("nayttely");

                    b.Property<DateTime?>("Pvm")
                        .HasColumnType("datetime")
                        .HasColumnName("pvm");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<string>("Tyyppi")
                        .HasColumnType("enum('ktk','korotus','uusintatarkastus','nayttely')")
                        .HasColumnName("tyyppi");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro10");

                    b.ToTable("hevonen_saavutus", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenSiirto", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<int>("Mihin")
                        .HasColumnType("int")
                        .HasColumnName("mihin");

                    b.Property<int>("Mista")
                        .HasColumnType("int")
                        .HasColumnName("mista");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<DateOnly?>("Vuosi")
                        .HasColumnType("date")
                        .HasColumnName("vuosi");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro11");

                    b.ToTable("hevonen_siirto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenStartti", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<uint?>("Eka")
                        .HasColumnType("int unsigned")
                        .HasColumnName("eka");

                    b.Property<int?>("Kaikki")
                        .HasColumnType("int")
                        .HasColumnName("kaikki");

                    b.Property<uint?>("Kolmas")
                        .HasColumnType("int unsigned")
                        .HasColumnName("kolmas");

                    b.Property<uint?>("Toka")
                        .HasColumnType("int unsigned")
                        .HasColumnName("toka");

                    b.HasKey("Spnro")
                        .HasName("PRIMARY");

                    b.ToTable("hevonen_startti", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenSukutiedot", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<sbyte?>("Polvia")
                        .HasColumnType("tinyint")
                        .HasColumnName("polvia");

                    b.Property<sbyte?>("Taysia")
                        .HasColumnType("tinyint")
                        .HasColumnName("taysia");

                    b.Property<byte[]>("Tulosdata")
                        .HasColumnType("blob")
                        .HasColumnName("tulosdata");

                    b.HasKey("Spnro")
                        .HasName("PRIMARY");

                    b.ToTable("hevonen_sukutiedot", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenVanhaktk", b =>
                {
                    b.Property<ulong>("MyRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("my_row_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MyRowId"));

                    b.Property<string>("Ktklaus")
                        .HasColumnType("text")
                        .HasColumnName("ktklaus");

                    b.Property<string>("Ktkpalk")
                        .HasColumnType("text")
                        .HasColumnName("ktkpalk");

                    b.Property<string>("Ktkpist")
                        .HasColumnType("text")
                        .HasColumnName("ktkpist");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.HasKey("MyRowId")
                        .HasName("PRIMARY");

                    b.ToTable("hevonen_vanhaktk", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenVanhemmat", b =>
                {
                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<uint?>("EmanSpnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("eman_spnro");

                    b.Property<uint?>("IsanSpnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("isan_spnro");

                    b.Property<float?>("Ssprosentti")
                        .HasColumnType("float")
                        .HasColumnName("ssprosentti");

                    b.HasKey("Spnro")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmanSpnro" }, "eman_spnro");

                    b.HasIndex(new[] { "IsanSpnro" }, "isan_spnro");

                    b.ToTable("hevonen_vanhemmat", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenVari", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.Property<short?>("Vaihtoehto")
                        .HasColumnType("smallint")
                        .HasColumnName("vaihtoehto");

                    b.Property<uint>("Vari")
                        .HasColumnType("int unsigned")
                        .HasColumnName("vari");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro12");

                    b.HasIndex(new[] { "Vari" }, "vari");

                    b.ToTable("hevonen_vari", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_unicode_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Kaannosvekotin", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Kieli")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("kieli");

                    b.Property<string>("Kohde")
                        .HasColumnType("text")
                        .HasColumnName("kohde");

                    b.Property<string>("Lahde")
                        .HasColumnType("text")
                        .HasColumnName("lahde");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("kaannosvekotin", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.KatseluHevonen", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<DateTime>("Aika")
                        .HasColumnType("datetime")
                        .HasColumnName("aika");

                    b.Property<string>("Referer")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("referer");

                    b.Property<uint>("Spnro")
                        .HasColumnType("int unsigned")
                        .HasColumnName("spnro");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Spnro" }, "spnro")
                        .HasDatabaseName("spnro13");

                    b.ToTable("katselu_hevonen", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sukuposti.Infrastructure.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUserToken", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.GallupVaihtoehto", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Gallup", "Gallup")
                        .WithMany("GallupVaihtoehtos")
                        .HasForeignKey("GallupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("gallup_vaihtoehto_ibfk_1");

                    b.Navigation("Gallup");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Hevonen", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Emalinja", "Emalinja")
                        .WithMany("Hevonens")
                        .HasForeignKey("EmalinjaId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("hevonen_ibfk_3");

                    b.Navigation("Emalinja");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenEnnaty", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenEnnaties")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_ennatys_ibfk_3");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenGeeni", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Geeni", "Geeni")
                        .WithMany("HevonenGeenis")
                        .HasForeignKey("GeeniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_geeni_ibfk_2");

                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenGeenis")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_geeni_ibfk_1");

                    b.Navigation("Geeni");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenKilpailuvoitto", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenKilpailuvoittos")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_kilpailuvoitto_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenKtk", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenKtks")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_ktk_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenKuva", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenKuvas")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_kuva_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenMetum", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithOne("HevonenMetum")
                        .HasForeignKey("Sukuposti.Infrastructure.Models.HevonenMetum", "Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_meta_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenMuuNayttelytulo", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenMuuNayttelytulos")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_muu_nayttelytulos_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenMuutum", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithOne("HevonenMuutum")
                        .HasForeignKey("Sukuposti.Infrastructure.Models.HevonenMuutum", "Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_muuta_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenNimi", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenNimis")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_nimi_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenOmistaja", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenOmistajas")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_omistaja_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenPalkinto", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenPalkintos")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_palkinto_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenReknro", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenReknros")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_reknro_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenRotuKtk", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenRotuKtks")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_rotu_ktk_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenSaavutu", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenSaavutus")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_saavutus_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenSiirto", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenSiirtos")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_siirto_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenStartti", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithOne("HevonenStartti")
                        .HasForeignKey("Sukuposti.Infrastructure.Models.HevonenStartti", "Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_startti_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenVanhemmat", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithOne("HevonenVanhemmat")
                        .HasForeignKey("Sukuposti.Infrastructure.Models.HevonenVanhemmat", "Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_vanhemmat_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.HevonenVari", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("HevonenVaris")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("hevonen_vari_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.KatseluHevonen", b =>
                {
                    b.HasOne("Sukuposti.Infrastructure.Models.Hevonen", "SpnroNavigation")
                        .WithMany("KatseluHevonens")
                        .HasForeignKey("Spnro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("katselu_hevonen_ibfk_1");

                    b.Navigation("SpnroNavigation");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Emalinja", b =>
                {
                    b.Navigation("Hevonens");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Gallup", b =>
                {
                    b.Navigation("GallupVaihtoehtos");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Geeni", b =>
                {
                    b.Navigation("HevonenGeenis");
                });

            modelBuilder.Entity("Sukuposti.Infrastructure.Models.Hevonen", b =>
                {
                    b.Navigation("HevonenEnnaties");

                    b.Navigation("HevonenGeenis");

                    b.Navigation("HevonenKilpailuvoittos");

                    b.Navigation("HevonenKtks");

                    b.Navigation("HevonenKuvas");

                    b.Navigation("HevonenMetum");

                    b.Navigation("HevonenMuuNayttelytulos");

                    b.Navigation("HevonenMuutum");

                    b.Navigation("HevonenNimis");

                    b.Navigation("HevonenOmistajas");

                    b.Navigation("HevonenPalkintos");

                    b.Navigation("HevonenReknros");

                    b.Navigation("HevonenRotuKtks");

                    b.Navigation("HevonenSaavutus");

                    b.Navigation("HevonenSiirtos");

                    b.Navigation("HevonenStartti");

                    b.Navigation("HevonenVanhemmat");

                    b.Navigation("HevonenVaris");

                    b.Navigation("KatseluHevonens");
                });
#pragma warning restore 612, 618
        }
    }
}
